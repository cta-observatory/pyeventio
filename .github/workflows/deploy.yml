name: Deploy

on:
  push:
    tags:
      - 'v*'

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-2019, macOS-11]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - uses: actions/setup-python@v4

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel

      - name: Build wheels
        run: python -m cibuildwheel --output-dir dist/
        env:
          # only build cpython
          CIBW_BUILD: "cp*"
          # exclude 32 bit and musl architectures to reduce build time
          # these shouldn't be needed
          CIBW_SKIP: "*-win32 *-manylinux_i686 *musllinux*"

      - uses: actions/upload-artifact@v3
        with:
          path: ./dist/*.whl
          name: wheels

  build_sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Build sdist
        run: |
          python --version
          pip install -U build
          python -m build --sdist

      - uses: actions/upload-artifact@v3
        with:
          path: ./dist/*.tar.gz
          name: sdist

  pypi_upload:
    runs-on: ubuntu-latest
    needs:
      - build_wheels
      - build_sdist
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3

      - name: preparing upload
        run: |
          ls -l wheels sdist
          mkdir dist
          cp wheels/* sdist/* dist/

      - name: Publish package
        uses: pypa/gh-action-pypi-publish@release/v1

        with:
          user: __token__
          password: ${{ secrets.pypi_password }}
